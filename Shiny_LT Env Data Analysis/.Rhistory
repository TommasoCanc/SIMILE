geom_point() + geom_line() +
geom_hline(yintercept = tchain.td$sesonalThermo, colour = as.factor(tchain.td$datetimeisoformat)) +
scale_y_reverse() +
theme_bw()
as.factor(tchain.td$datetimeisoformat)
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(yintercept = tchain.td$sesonalThermo, fill = as.factor(tchain.td$datetimeisoformat)) +
scale_y_reverse() +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Depth (m)") + ylab("Temperature (°C)") +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(fill = "Dose (mg)")
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(fill = "Dose (mg)") +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Dose (mg)") +
theme_bw()
runApp('Desktop/GitHub/SIMILE/Shiny_LT Env Data Analysis')
tchain.t
time <- c(10, 60, 90, 200, 260, 300, 700)
value <- c(1, 6, 8, 40, 50, 60, 70)
df <- data.frame(time, value)
f1 <- approxfun(df$time, df$value)
f1
approxfun(df$time, df$value)
optimize(function(t0) abs(f1(t0) - v0), interval = range(df$time))
v0 <- 10
optimize(function(t0) abs(f1(t0) - v0), interval = range(df$time))
time <- tchain.td$datetimeisoformat
value <- tchain.td$sesonalThermo
df <- data.frame(time, value)
f1 <- approxfun(df$time, df$value)
v0 <- tchain.td$sesonalThermo
optimize(function(t0) abs(f1(t0) - v0), interval = range(df$time))
tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[1], ]
temp <- tchain.t$temp[tchain.t$datehour == unique(tchain.t$datehour)[1], ]
tchain.t$temp[tchain.t$datehour == unique(tchain.t$datehour)[1]]
tchain.t$depth[tchain.t$datehour == unique(tchain.t$datehour)[1]]
temp <- tchain.t$temp[tchain.t$datehour == unique(tchain.t$datehour)[1]]
depth <- tchain.t$depth[tchain.t$datehour == unique(tchain.t$datehour)[1]]
df <- data.frame(time, value)
df <- data.frame(temp, depth)
f1 <- approxfun(df$temp, df$depth)
tchain.td$sesonalThermo
v0 <- tchain.td$sesonalThermo[1]
optimize(function(t0) abs(f1(t0) - v0), interval = range(df$time))
optimize(function(t0) abs(f1(t0) - v0), interval = range(df$temp))
df$temp
tchain.t$temp[tchain.t$datehour == unique(tchain.t$datehour)[1]]
tchain.t$temp[tchain.t$datehour == unique(tchain.t$datehour), ]
tchain.t[tchain.t$datehour == unique(tchain.t$datehour), ]
unique(tchain.t$datehour)
tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[1], ]
df <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[1], ]
f1 <- approxfun(df$temp, df$depth)
f1
v0 <- tchain.td$sesonalThermo[1]
optimize(function(t0) abs(f1(t0) - v0), interval = range(df$temp))
p <- optimize(function(t0) abs(f1(t0) - v0), interval = range(df$temp))
p
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=p$minimum, y=tchain.td$sesonalThermo[1])) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
tchain <- read.csv("~/Desktop/chl_mainAggregation_2022-09-14.csv")
head(tchain)
misCol <- colnames(tchain)[colnames(tchain) %ni% c("datetimeisoformat", "year", "month", "day", "hour", "minute", "second")]
runApp('Desktop/GitHub/SIMILE/Shiny_LT Env Data Analysis')
tchain <- read.csv("~/Desktop/chl_mainAggregation_2022-09-14.csv")
head(tchain)
misCol <- colnames(tchain)[colnames(tchain) %ni% c("datetimeisoformat", "year", "month", "day", "hour", "minute", "second")]
depth <- c(1:13)
tchain.t <- as.data.frame(t(tchain[ ,8:length(tchain)]))
colnames(tchain.t) <- tchain$datetimeisoformat
tchain.t <- gather(tchain.t, datehour, temp, colnames(tchain.t[ ,1:ncol(tchain.t)]))
tchain.t$depth <- rep(depth, length(unique(tchain.t$datehour)))
tchain.t$datehour <- ymd_hms(tchain.t$datehour)
tchain.td <- data.frame()
intersection <- data.frame()
i=1
tchain.t.sub <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[i], ]
tchain.t.sub
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1)
)
tchain.td.1
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
v0 <- tchain.td.1$sesonalThermo[i]
v0
p <- optimize(function(t0) abs(f1(t0) - v0), interval = range(df$temp))
p <- optimize(function(t0) abs(f1(t0) - v0), interval = range(tchain.t.sub$temp))
p
tchain.td <- data.frame()
intersection <- data.frame()
for(i in 1:length(unique(tchain.t$datehour))){
tchain.t.sub <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[i], ]
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1)
)
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo[i]), interval = range(tchain.t.sub$temp))
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo[i]), interval = range(tchain.t.sub$temp))
intersection.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = pSesonal$minimum,
maxThermo = pMax$minimum)
tchain.td <- rbind(tchain.td, tchain.td.1)
intersection <- rbind(intersection, intersection.1)
}
i=1
tchain.td <- data.frame()
intersection <- data.frame()
tchain.t.sub
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1))
tchain.td.1
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
f1
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo[i]), interval = range(tchain.t.sub$temp))
pSesonal
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo[i]), interval = range(tchain.t.sub$temp))
pMax
intersection.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = pSesonal$minimum,
maxThermo = pMax$minimum)
intersection.1
tchain.td <- rbind(tchain.td, tchain.td.1)
intersection <- rbind(intersection, intersection.1)
intersection
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo, y=tchain.td$sesonalThermo[1])) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo, y=tchain.td$sesonalThermo[1]), colour = "red") +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
for(i in 1:length(unique(tchain.t$datehour))){
tchain.t.sub <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[i], ]
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1))
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo[i]), interval = range(tchain.t.sub$temp))
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo[i]), interval = range(tchain.t.sub$temp))
intersection.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = pSesonal$minimum,
maxThermo = pMax$minimum)
tchain.td <- rbind(tchain.td, tchain.td.1)
intersection <- rbind(intersection, intersection.1)
}
tchain.td <- data.frame()
intersection <- data.frame()
for(i in 1:length(unique(tchain.t$datehour))){
tchain.t.sub <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[i], ]
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1))
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo[i]), interval = range(tchain.t.sub$temp))
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo[i]), interval = range(tchain.t.sub$temp))
intersection.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = pSesonal$minimum,
maxThermo = pMax$minimum)
tchain.td <- rbind(tchain.td, tchain.td.1)
intersection <- rbind(intersection, intersection.1)
}
tchain.td
intersection
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo, y=tchain.td$sesonalThermo), colour = "red") +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
tchain.td$sesonalThermo
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo, y=tchain.td$sesonalThermo)) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
intersection$sesonalThermo
tchain.td$sesonalThermo
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo, y=tchain.td$sesonalThermo)) +
scale_y_reverse()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo[1], y=tchain.td$sesonalThermo[1])) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo[2], y=tchain.td$sesonalThermo[2])) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
intersection$sesonalThermo
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=tchain.td$sesonalThermo[1], y=intersection$sesonalThermo[1])) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo[1], y=tchain.td$sesonalThermo[1])) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
intersection$sesonalThermo[1]
tchain.td$sesonalThermo[1]
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(aes(x=intersection$sesonalThermo, y=tchain.td$sesonalThermo, coluour = "red")) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
intersectionPlot <- data.frame(x= intersection$sesonalThermo, y = tchain.td$sesonalThermo)
intersectionPlot
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(data = intersectionPlot, aes(x=x, y=y, coluour = "red")) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat)))
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(data = intersectionPlot, aes(x=x, y=y)) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
#geom_point(data = intersectionPlot, aes(x=x, y=y)) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
intersectionPlot
runApp('Desktop/GitHub/SIMILE/Shiny_LT Env Data Analysis')
tchain <- read.csv("~/Desktop/chl_mainAggregation_2022-09-14.csv")
head(tchain)
misCol <- colnames(tchain)[colnames(tchain) %ni% c("datetimeisoformat", "year", "month", "day", "hour", "minute", "second")]
depth <- c(1:13)
tchain.t <- as.data.frame(t(tchain[ ,8:length(tchain)]))
colnames(tchain.t) <- tchain$datetimeisoformat
tchain.t <- gather(tchain.t, datehour, temp, colnames(tchain.t[ ,1:ncol(tchain.t)]))
tchain.t$depth <- rep(depth, length(unique(tchain.t$datehour)))
tchain.t$datehour <- ymd_hms(tchain.t$datehour)
tchain.td <- data.frame()
intersection <- data.frame()
i=2
tchain.t.sub <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[i], ]
tchain.t.sub
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1))
tchain.td.1
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
f1
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo[i]), interval = range(tchain.t.sub$temp))
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo[i]), interval = range(tchain.t.sub$temp))
pSesonal
pMax
tchain.td.1$sesonalThermo[i]
tchain.td.1
tchain.td.1$sesonalThermo[2]
tchain.td.1$sesonalThermo
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo), interval = range(tchain.t.sub$temp))
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo), interval = range(tchain.t.sub$temp))
intersection.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = pSesonal$minimum,
maxThermo = pMax$minimum)
intersection.1
tchain.td <- rbind(tchain.td, tchain.td.1)
intersection <- rbind(intersection, intersection.1)
tchain.td <- data.frame()
intersection <- data.frame()
for(i in 1:length(unique(tchain.t$datehour))){
tchain.t.sub <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[i], ]
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1))
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo), interval = range(tchain.t.sub$temp))
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo), interval = range(tchain.t.sub$temp))
intersection.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = pSesonal$minimum,
maxThermo = pMax$minimum)
tchain.td <- rbind(tchain.td, tchain.td.1)
intersection <- rbind(intersection, intersection.1)
}
intersectionPlot <- data.frame(x= intersection$sesonalThermo, y = tchain.td$sesonalThermo)
intersectionPlot
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
geom_point(data = intersectionPlot, aes(x=x, y=y)) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
tchain.t
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
p <- ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
p + geom_point(data = intersectionPlot, aes(x=x, y=y))
intersectionPlot
intersection
intersection
intersectionPlot <- data.frame(datetimeisoformat = intersection$datetimeisoformat
x= intersection$sesonalThermo,
intersectionPlot <- data.frame(datetimeisoformat = intersection$datetimeisoformat,
x= intersection$sesonalThermo,
y = tchain.td$sesonalThermo)
intersectionPlot
p + geom_point(data = intersectionPlot, aes(x=x, y=y))
p + geom_point(data = intersectionPlot, aes(x=x, y=y, colour = datetimeisoformat))
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
p + geom_point(data = intersectionPlot, aes(x=x[1], y=y[1]))
intersectionPlot <- data.frame(x= intersection$sesonalThermo,
y = tchain.td$sesonalThermo)
p + geom_point(data = intersectionPlot, col = 'blue')
intersectionPlot
p + annotate("point", x = intersectionPlot$x, y = intersectionPlot$y, colour = "blue")
depth <- c(1, 2.5, 5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25, 30, 35)
tchain.t <- as.data.frame(t(tchain[ ,8:length(tchain)]))
colnames(tchain.t) <- tchain$datetimeisoformat
tchain.t <- gather(tchain.t, datehour, temp, colnames(tchain.t[ ,1:ncol(tchain.t)]))
tchain.t$depth <- rep(depth, length(unique(tchain.t$datehour)))
tchain.t$datehour <- ymd_hms(tchain.t$datehour)
tchain.td <- data.frame()
intersection <- data.frame()
for(i in 1:length(unique(tchain.t$datehour))){
tchain.t.sub <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[i], ]
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1))
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo), interval = range(tchain.t.sub$temp))
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo), interval = range(tchain.t.sub$temp))
intersection.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = pSesonal$minimum,
maxThermo = pMax$minimum)
tchain.td <- rbind(tchain.td, tchain.td.1)
intersection <- rbind(intersection, intersection.1)
}
intersectionPlot <- data.frame(x= intersection$sesonalThermo,
y = tchain.td$sesonalThermo)
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
p + annotate("point", x = intersectionPlot$x, y = intersectionPlot$y, colour = "blue")
depth <- c(1, 2.5, 5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25, 30, 35)
tchain.t <- as.data.frame(t(tchain[ ,8:length(tchain)]))
tchain.t
colnames(tchain.t) <- tchain$datetimeisoformat
tchain.t <- gather(tchain.t, datehour, temp, colnames(tchain.t[ ,1:ncol(tchain.t)]))
tchain.t$depth <- rep(depth, length(unique(tchain.t$datehour)))
tchain.t
tchain.td <- data.frame()
intersection <- data.frame()
for(i in 1:length(unique(tchain.t$datehour))){
tchain.t.sub <- tchain.t[tchain.t$datehour == unique(tchain.t$datehour)[i], ]
tchain.td.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = T, index = F, mixed.cutoff = 1),
maxThermo = thermo.depth(tchain.t.sub$temp, tchain.t.sub$depth, Smin = 0.1, seasonal = F, index = F, mixed.cutoff = 1))
f1 <- approxfun(tchain.t.sub$temp, tchain.t.sub$depth)
pSesonal <- optimize(function(t0) abs(f1(t0) - tchain.td.1$sesonalThermo), interval = range(tchain.t.sub$temp))
pMax <- optimize(function(t0) abs(f1(t0) - tchain.td.1$maxThermo), interval = range(tchain.t.sub$temp))
intersection.1 <- data.frame(datetimeisoformat = unique(tchain.t$datehour)[i],
sesonalThermo = pSesonal$minimum,
maxThermo = pMax$minimum)
tchain.td <- rbind(tchain.td, tchain.td.1)
intersection <- rbind(intersection, intersection.1)
}
intersectionPlot <- data.frame(x= intersection$sesonalThermo,
y = tchain.td$sesonalThermo)
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
p + annotate("point", x = intersectionPlot$x, y = intersectionPlot$y, colour = "blue")
ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
intersection
p + annotate("point", x = intersectionPlot$x, y = intersectionPlot$y, colour = "blue")
p <- ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
p + annotate("point", x = intersectionPlot$x, y = intersectionPlot$y, colour = "blue")
p +
annotate("point", x = intersection$sesonalThermo, y = tchain.td$sesonalThermo, colour = "blue") +
annotate("point", x = intersection$maxThermo, y = tchain.td$maxThermo, colour = "red")
p <- ggplot(data = tchain.t, aes(x = temp, y = depth, colour = as.factor(datehour))) +
geom_point() + geom_line() +
#geom_hline(data = tchain.td, aes(yintercept = sesonalThermo, colour = as.factor(datetimeisoformat))) +
scale_y_reverse() +
xlab("Temperature (°C)") + ylab("Depth (m)") +
labs(colour = "Time agr") +
theme_bw()
p +
annotate("point", x = intersection$sesonalThermo, y = tchain.td$sesonalThermo, colour = "blue") +
annotate("point", x = intersection$maxThermo, y = tchain.td$maxThermo, colour = "red")
p +
annotate("point", x = intersection$sesonalThermo, y = tchain.td$sesonalThermo, colour = "blue", size = 2) +
annotate("point", x = intersection$maxThermo, y = tchain.td$maxThermo, colour = "red", size = 2)
p +
annotate("point", x = intersection$sesonalThermo, y = tchain.td$sesonalThermo, colour = "blue", size = 2) +
annotate("point", x = intersection$maxThermo, y = tchain.td$maxThermo, colour = "brown", size = 2)
runApp('Desktop/GitHub/SIMILE/Shiny_LT Env Data Analysis')
shiny::runApp('Desktop/GitHub/SIMILE/Shiny_LT Env Data Analysis')
runApp('Desktop/GitHub/SIMILE/Shiny_LT Env Data Analysis')
